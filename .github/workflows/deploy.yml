name: build-test-deploy-to-s3
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # - name: Cache dependencies
      #   id: cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.npm
      #       ${{ github.workspace }}/.next/cache
      #     # Generate a new cache whenever packages or source files change.
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
      #     # If source files changed but packages didn't, rebuild from a prior cache.
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: npm ci

      - name: Create .env File
        run: |
          touch .env
          echo "COSMOS_CONSTRING=${{ secrets.COSMOS_CONSTRING }}" >> .env
          echo "COSMOS_CONTAINER=${{ secrets.COSMOS_CONTAINER }}" >> .env
          echo "COSMOS_DBNAME=${{ secrets.COSMOS_DBNAME }}" >> .env
          echo "IMAGES_PATH=${{ secrets.IMAGES_PATH }}" >> .env
          echo "TZ=Pacific/Auckland" >> .env

      - name: NPM Build and Cypress E2E Tests
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm start

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Deploy to AWS S3
        run: aws s3 sync ./out s3://${{ vars.S3_BUCKET }} --quiet --delete
